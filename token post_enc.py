# Encrypted By Saim King
 # Github : GitHub.com/Saimkhan42
_ = lambda __ : __import__('base64').b64decode(__[::-1]);exec((_)(b'=='))
